name: 'Build Binaries'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: read
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  TEST: ""

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets: [ linux ]
        architectures: [ x86_64, aarch64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Binaries
        id: cache-binaries
        uses: actions/cache@v3
        with:
          path: ./build
          key: cached-binaries-${{ github.run_id }}

      - name: Execute the script
        env:
          TARGET_BUILD: ${{ matrix.targets }}
          ARCH_BUILD: ${{ matrix.architectures }}
        run: |
          bash ./scripts/build-binaries.sh

      - name: Archive built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cached-binaries-${{ github.run_id }}
          path: ./build

  show-binaries:
    needs:
      - build-binaries
    runs-on: ubuntu-latest
    steps:
      - name: Download archived built artifacts
        id: download-artifacts
        uses: actions/download-artifact@v3
        with:
          name: cached-binaries-${{ github.run_id }}

      - name: List binaries
        run: |
          ls ${{steps.download-artifacts.outputs.download-path}}

  create-release-draft:
    needs:
      - show-binaries
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifacts
        id: download-artifacts
        uses: actions/download-artifact@v3
        with:
          name: cached-binaries-${{ github.run_id }}

      - name: Create release draft
        id: draft-release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload the assets to the release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |         
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            ${{steps.draft-release.outputs.upload_url}}?name=haproxy-linux_x86_64 \
            --data-binary "@${{steps.download-artifacts.outputs.download-path}}/haproxy-linux_x86_64"
          
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            ${{steps.draft-release.outputs.upload_url}}?name=haproxy-linux_aarch64 \
            --data-binary "@${{steps.download-artifacts.outputs.download-path}}/haproxy-linux_aarch64"
